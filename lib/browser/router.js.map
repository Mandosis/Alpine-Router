{"version":3,"sources":["webpack:///webpack/bootstrap 92a7c9ce9603032c46c1","webpack:///./src/router.ts"],"names":[],"mappings":"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","file":"router.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"D:\\\\Chris\\\\Workspace\\\\alpine\\\\router\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 92a7c9ce9603032c46c1","/**\r\n * Interface for route data\r\n */\r\nexport interface Route {\r\n  path: string;\r\n  template?: string;\r\n  templateUrl?: string;\r\n  children?: Route[];\r\n}\r\n\r\n/**\r\n * Client-side router for single page applications\r\n */\r\nexport default class Router {\r\n  private _routes: Route[] = [];\r\n\r\n  constructor(routes: Route[]) {\r\n\r\n    if (Array.isArray(routes)) {\r\n      for (let route of routes) {\r\n        this._routes.push(route);\r\n      }\r\n    } else {\r\n      console.error('Router was not created. Did you enter an array of objects in the following format [{ path: \"example\", template: \"<h1>Example</h1>\"}]?')\r\n    }\r\n\r\n    this._getWindowUrlAndNavigate();\r\n\r\n    window.onhashchange = () => {\r\n      this._getWindowUrlAndNavigate();\r\n    }\r\n\r\n  }\r\n\r\n  get routes(): Route[] {\r\n    return this._routes;\r\n  }\r\n\r\n  /**\r\n   * Get tokens from a path\r\n   * \r\n   * @param path  Path to get tokens from\r\n   * @returns     List of tokens from path\r\n   */\r\n  getPathTokens(path: string): string[] {\r\n    let tokens = path.split('/');\r\n\r\n    if (tokens[0] === '' && tokens[1] === '') {\r\n      let token = path;\r\n      tokens = [''];\r\n    }\r\n    \r\n    return tokens;\r\n  }\r\n\r\n  /**\r\n   * Sanitize path and remove # and / from the beginning\r\n   * \r\n   * @param path  Path to sanitize\r\n   * @return      Sanitized path\r\n   */\r\n  private sanitizePath(path: string): string {\r\n    if (path.charAt(0) === '#') {\r\n        path = path.slice(1, path.length);\r\n    }\r\n\r\n    if (path.charAt(0) === '/' && path !== '/') {\r\n        path = path.slice(1, path.length);;\r\n    }\r\n\r\n    return path;\r\n   }\r\n\r\n  /**\r\n   * Navigate to new path\r\n   * \r\n   * @param path Path to navigate to.\r\n   * @returns Success of navigation.\r\n   */\r\n  public navigate(url: string): boolean {\r\n\r\n    url = this.sanitizePath(url);\r\n\r\n    // Get url tokens\r\n    let urlTokens = this.getPathTokens(url);\r\n    let urlMap = new Map();\r\n    \r\n    for (let token of urlTokens) {\r\n      urlMap.set(token, false);\r\n    }\r\n\r\n    let result = this._getRoutes(this._routes, urlTokens, urlMap);\r\n\r\n    if (result.length > 0) {\r\n      this._changeBrowserUrl(url);\r\n      this._addTemplatesToDom(result);\r\n      return true;\r\n    } \r\n\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Match and return routes\r\n   * \r\n   * @param routes Routes to match\r\n   * @param urlTokens URL Tokens\r\n   * @param urlMap URL Map\r\n   * @param routeHistory Route History\r\n   */\r\n  private _getRoutes(routes: Route[], urlTokens: string[], urlMap: Map<string, boolean>, routeHistory?: Route[]): Route[] {\r\n    routeHistory = routeHistory || [];\r\n\r\n    // iterate through routes\r\n    for (let route of routes) {\r\n      // get route path tokens\r\n      const routeTokens = this.getPathTokens(route.path);\r\n      urlMap = this._compareTokens(routeTokens, urlTokens, urlMap);\r\n      const consecutiveCount = this._countConsecutiveTokens(urlMap);\r\n      const isFullPathMatch = (consecutiveCount === urlMap.size);\r\n      const isPartialMatch = (consecutiveCount < urlMap.size && consecutiveCount !== 0);\r\n\r\n      if (isFullPathMatch) {\r\n        routeHistory.push(route);\r\n        return routeHistory;\r\n      }\r\n\r\n      if (isPartialMatch && route.children) {\r\n        routeHistory.push(route);\r\n        return this._getRoutes(route.children, urlTokens, urlMap, routeHistory);\r\n      }\r\n    }\r\n\r\n    return [];\r\n  }\r\n\r\n  private _compareTokens(routeTokens: string[], urlTokens: string[], urlMap: Map<string, boolean>) {\r\n    // for loop to count number of seen tokens\r\n    let seen = 0;\r\n    for (let token of urlTokens) {\r\n      if (urlMap.get(token)) { seen++;}\r\n    }\r\n\r\n    if (seen > 0) {\r\n      urlTokens = urlTokens.slice(seen, routeTokens.length + 1);\r\n    }\r\n\r\n    // compare route tokens with url tokens\r\n    for (let it = 0; it < urlTokens.length; it++) {\r\n      const route = routeTokens[it];\r\n      const url = urlTokens[it];\r\n\r\n      if (!urlMap.get(url)) {\r\n        if (route === undefined) { return urlMap; }\r\n\r\n        if (route === url) {\r\n          urlMap.set(url, true);\r\n        }\r\n      }\r\n    }\r\n\r\n    return urlMap;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets consecutive token match count\r\n   * \r\n   * @param tokenMap  Map of tokens\r\n   * @return          Consecutive match count\r\n   */\r\n  private _countConsecutiveTokens(tokenMap: Map<string, boolean>) {\r\n    let count = 0;\r\n    let isLastTokenAMatch = true;\r\n\r\n    for (let token of tokenMap) {\r\n      if (token[1] && isLastTokenAMatch) {\r\n        count++;\r\n      } else {\r\n        return count;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  /**\r\n   * Gets the current window url and navigate\r\n   */\r\n  private _getWindowUrlAndNavigate() {\r\n    if (this._baseHrefValue) {\r\n      let location = window.location.pathname;\r\n\r\n      location = location.substring(\r\n        this._baseHrefValue.length,\r\n        location.length\r\n      );\r\n\r\n      return this.navigate(location);\r\n    }\r\n\r\n    this.navigate(window.location.hash);\r\n  }\r\n\r\n  /**\r\n   * Changes url in address bar after the domain name\r\n   * \r\n   * @param path  Path to change url to\r\n   */\r\n  private _changeBrowserUrl(path: string) {\r\n    let finalPath = this._getAndAppendBaseHref(path);\r\n    history.pushState('', path, finalPath);\r\n  }\r\n\r\n  /**\r\n   * Gets and appends the base href value if it exists\r\n   * \r\n   * @param url       URL for route\r\n   * @return          modified url adjusted for base tag if it exists\r\n   */\r\n  private _getAndAppendBaseHref(path: string) {\r\n    if (path === '/') { path = '' }\r\n    let baseHref = this._baseHrefValue;\r\n\r\n    if (baseHref && baseHref !== '/') {\r\n      return baseHref + path;\r\n    }\r\n\r\n    if (baseHref && baseHref === '/') {\r\n      return path;\r\n    }\r\n\r\n    return '#/' + path;\r\n  }\r\n\r\n  /**\r\n   * Get value of of the href attribute in the base tag if it exists\r\n   * \r\n   * @returns Value of href attributes\r\n   */\r\n  private get _baseHrefValue(): string {\r\n    let baseElement: HTMLElement = document.getElementsByTagName('base')[0];\r\n    let baseHref: string;\r\n\r\n    if (baseElement) {\r\n      return baseElement\r\n        .attributes\r\n        .getNamedItem('href')\r\n        .value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the matched routes and add the templates to the DOM\r\n   * \r\n   * @param routes    Matched routes\r\n   */\r\n  private _addTemplatesToDom(routes: Route[]): void {\r\n    for (let it = 0; it < routes.length; it++) {\r\n      const outlets = document.getElementsByTagName('router-outlet');\r\n\r\n      if (!outlets[it]) { console.error('Router: router-outlet missing.')}\r\n\r\n      outlets[it].innerHTML = routes[it].template;\r\n    }\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/router.ts"],"sourceRoot":""}